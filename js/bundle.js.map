{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACxGgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,2BAA2B,UAAU,MAAM,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+DAAW;AACf;AACA,2BAA2B,iCAAiC;AAC5D;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACxDwC;AACd;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uDAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAgB;AAC5B,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACtEpB,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA,KAAK;AACL;AACA,sDAAsD;AACtD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,+FAA+F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;AACrB;AAC0B;;;;;;;;;;;;;;;AC3D1B,iBAAiB,qFAAqF;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,cAAc;AACzE,yDAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACxGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,2BAA2B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACtCnB;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AC3ErB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;AACA;AACA;AACA;AACA;;;;;;;UCrBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNa;AACsB;AACsB;AACrB;AACA;AACE;AACJ;AACE;AACpC;AACA;AACA,0CAA0C,+DAAe;AACzD;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT;AACA,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,CAAC,E","sources":["webpack://food-dist/./js/modules/calc.js","webpack://food-dist/./js/modules/cards.js","webpack://food-dist/./js/modules/forms.js","webpack://food-dist/./js/modules/modal.js","webpack://food-dist/./js/modules/slider.js","webpack://food-dist/./js/modules/tabs.js","webpack://food-dist/./js/modules/timer.js","webpack://food-dist/./js/services/services.js","webpack://food-dist/webpack/bootstrap","webpack://food-dist/webpack/runtime/define property getters","webpack://food-dist/webpack/runtime/hasOwnProperty shorthand","webpack://food-dist/webpack/runtime/make namespace object","webpack://food-dist/./js/script.js"],"sourcesContent":["const calc = () => {\r\n    const calculatingResult = document.querySelector('.calculating__result span');\r\n\r\n    let sex = 'female',\r\n        height, weight, age,\r\n        ratio = 1.375;\r\n\r\n    !localStorage.getItem('sex')\r\n        ? localStorage.setItem('sex', 'female')\r\n        : sex = localStorage.getItem('sex');\r\n\r\n    !localStorage.getItem('ratio')\r\n        ? localStorage.setItem('ratio', 1.375)\r\n        : ratio = +localStorage.getItem('ratio');\r\n\r\n    const calcNormalRatio = () => {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            calculatingResult.textContent = '____';\r\n            return;\r\n        }\r\n\r\n        sex == 'male'\r\n            ? calculatingResult.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio)\r\n            : calculatingResult.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n    };\r\n\r\n    calcNormalRatio();\r\n\r\n    const initLocalData = (selector, activeClass) => {\r\n        const elements = document.querySelectorAll(selector);\r\n        elements.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n            if (item.getAttribute('id') === localStorage.getItem('sex')) {\r\n                item.classList.add(activeClass);\r\n            }\r\n            if (item.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                item.classList.add(activeClass);\r\n            }\r\n        });\r\n    };\r\n\r\n    initLocalData('.calculating__choose_big div', 'calculating__choose-item_active');\r\n    initLocalData('#gender div', 'calculating__choose-item_active');\r\n\r\n\r\n    const getStaticInformation = (selector, activeClass) => {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (event) => {\r\n                const target = event.target;\r\n\r\n                if (target.getAttribute('data-ratio')) {\r\n                    localStorage.setItem('ratio', target.getAttribute('data-ratio'));\r\n                    ratio = +localStorage.getItem('ratio');\r\n                } else {\r\n                    localStorage.setItem('sex', target.getAttribute('id'));\r\n                    sex = localStorage.getItem('sex');\r\n                }\r\n                elements.forEach(item => {\r\n                    item.classList.remove(activeClass);\r\n                });\r\n\r\n                target.classList.add(activeClass);\r\n\r\n                calcNormalRatio();\r\n            });\r\n        });\r\n    };\r\n\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n\r\n\r\n    const getDynamicInformation = (selector) => {\r\n        const input = document.querySelector(selector);\r\n        input.addEventListener('input', () => {\r\n            if (input.value.match(/\\D/)) {\r\n                input.style.border = '1px solid red';\r\n                input.style.transition = '.3s';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcNormalRatio();\r\n        });\r\n    };\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n};\r\n\r\nexport default calc;","import { getResource } from \"../services/services\";\r\n\r\nfunction cards() {\r\n    // Используем классы для создание карточек меню\r\n\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27;\r\n            this.changeToUAH(); \r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer; \r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            if (this.classes.length === 0) {\r\n                this.classes = \"menu__item\";\r\n                element.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n                <img src=${this.src} alt=${this.alt}>\r\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                <div class=\"menu__item-descr\">${this.descr}</div>\r\n                <div class=\"menu__item-divider\"></div>\r\n                <div class=\"menu__item-price\">\r\n                    <div class=\"menu__item-cost\">Цена:</div>\r\n                    <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                </div>\r\n            `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({img, altimg, title, descr, price}) => {\r\n                new MenuCard(img, altimg, title, descr, price, \".menu .container\").render();\r\n            });\r\n        });\r\n\r\n\r\n}\r\n\r\nexport default cards;","import { showModalWindow, closeModalWindow } from \"./modal\";\r\nimport {postData} from '../services/services';\r\n\r\nfunction forms(formSelector, timerModalId) {\r\n    // Forms\r\n\r\n    const forms = document.querySelectorAll(formSelector);\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            let statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n        \r\n            const formData = new FormData(form);\r\n\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);\r\n            }).finally(() => {\r\n                form.reset();\r\n            });\r\n        });\r\n    }\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n        showModalWindow('.modal', timerModalId);\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>×</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModalWindow('.modal');\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nexport default forms;","function showModalWindow(modalSelector, modalTimerId) { // *Function for showing modal windows\r\n    const modalWindow = document.querySelector(modalSelector);\r\n    modalWindow.classList.add('show');\r\n    modalWindow.classList.remove('hide');\r\n    document.body.style.overflow = 'hidden';\r\n    if (modalTimerId) {\r\n        clearInterval(modalTimerId);\r\n    }\r\n}\r\n\r\nfunction closeModalWindow(modalSelector) { // *Function for closing modal windows\r\n    const modalWindow = document.querySelector(modalSelector);\r\n    modalWindow.classList.remove('show');\r\n    modalWindow.classList.add('hide');\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nconst modal = (triggerSelector, modalSelector, modalTimerId) => {\r\n    const modalWindow = document.querySelector(modalSelector),\r\n          modalContactUsBtn = document.querySelectorAll(triggerSelector);\r\n\r\n\r\n    // *Opening modal windows\r\n    modalContactUsBtn.forEach(item => {\r\n        item.addEventListener('click', () => showModalWindow(modalSelector, modalTimerId));\r\n    });\r\n\r\n    // *Closing modal windows:\r\n\r\n    modalWindow.addEventListener('click', (e) => { // *When clicking in an empty space\r\n        if (e.target === modalWindow || e.target.getAttribute('data-close') == '') {\r\n            closeModalWindow(modalSelector);\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (event) => { // *When you click on Escape\r\n        if (event.code == 'Escape' && modalWindow.classList.contains('show')) {\r\n            closeModalWindow(modalSelector);\r\n        }\r\n    });\r\n\r\n\r\n    function showModalWindowByScroll() {\r\n        const documentHeight = document.documentElement.scrollHeight || document.body.scrollHeight, // *Page Height\r\n              clientVisiblity = document.documentElement.clientHeight || document.body.clientHeight, // *height of the client part\r\n              currentPosition = document.documentElement.scrollTop || document.body.scrollTop; // *Current position\r\n\r\n        // *If you add up the current position and the visible part for the client, you get the entire page size\r\n        if (clientVisiblity + currentPosition >= documentHeight - 1) {\r\n            showModalWindow(modalSelector, modalTimerId);\r\n            removeEventListener('scroll', showModalWindowByScroll);\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', showModalWindowByScroll);\r\n};\r\n\r\nexport default modal;\r\n\r\nexport {closeModalWindow};\r\nexport {showModalWindow};","const slides = ({container, slide, nextArrow, prevArrow, totalCounter, currentCounter, wrapper, field}) => {\r\n    const slider = document.querySelector(container),\r\n          sliderPrevBtn = document.querySelector(prevArrow),\r\n          sliderNextBtn = document.querySelector(nextArrow),\r\n          currentSlide = document.querySelector(currentCounter),\r\n          totalSlides = document.querySelector(totalCounter),\r\n          sliderWrapper = document.querySelector(wrapper),\r\n          slidesField = document.querySelector(field),\r\n          slides = document.querySelectorAll(slide);\r\n\r\n    let slideIndex = 1,\r\n        offset = 0;\r\n\r\n    const sliderWrapperWidth = window.getComputedStyle(sliderWrapper).width;\r\n\r\n    const currentSlideWidth = +sliderWrapperWidth.replace(/\\D/g, ''),\r\n    slidesCount = slides.length - 1;\r\n\r\n    const deleteNotDigits = (str) => {\r\n        +str.replace(/\\D/g, '');\r\n    };\r\n\r\n    console.log(currentSlideWidth);\r\n\r\n    // Indicators for my Slider:\r\n    const indicatorsArr = []; // Массив с индикаторами\r\n    \r\n    const indicatorsWrapper = document.createElement('div');\r\n    indicatorsWrapper.classList.add('offer__slider-indicator', 'indicator');\r\n    slider.append(indicatorsWrapper);\r\n\r\n    for (let i = 0; i < slides.length; i++ ) {\r\n        const indicator = document.createElement('div');\r\n        indicator.classList.add('indicator__item');\r\n        indicator.setAttribute('data-slide-to', i + 1);\r\n        indicatorsWrapper.append(indicator);\r\n        indicatorsArr.push(indicator);\r\n\r\n        i == 0 ? indicator.classList.add('indicator__item-active') : false\r\n    }\r\n    \r\n\r\n    const setActiveClass = () => {\r\n        indicatorsArr.forEach(indicator => indicator.classList.remove('indicator__item-active'));\r\n        indicatorsArr[slideIndex - 1].classList.add('indicator__item-active');\r\n    };\r\n\r\n    indicatorsArr.forEach(indicator => {\r\n        indicator.addEventListener('click', (event) => {\r\n            const slideTo = event.target.getAttribute('data-slide-to');\r\n            slideIndex = slideTo;\r\n            offset = currentSlideWidth * (slideTo - 1);\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            setActiveClass();\r\n            setIndex();\r\n        });\r\n    });\r\n\r\n\r\n    sliderWrapper.style.cssText = // Cтили для обертки слайдеров\r\n    `\r\n        overflow: hidden;\r\n        position: relative;\r\n    `;\r\n\r\n    slidesField.style.cssText = // поле\r\n    `\r\n        width: ${100 * slides.length}%;\r\n        display: flex;\r\n        transition: .5s;\r\n    `;\r\n    \r\n\r\n    slides.forEach(slide => slide.style.width = sliderWrapperWidth );\r\n\r\n    const setIndex = () => {\r\n        slides.length < 10 ? totalSlides.textContent = `0${slides.length}` : totalSlides.textContent = slides.length;\r\n        slideIndex < 10 ? currentSlide.textContent = `0${slideIndex}` : currentSlide.textContent = slideIndex;        \r\n    };\r\n\r\n    setIndex();\r\n\r\n\r\n    sliderNextBtn.addEventListener('click', () => {\r\n        offset == currentSlideWidth * slidesCount ? offset = 0 : offset += currentSlideWidth;\r\n        slideIndex == slides.length ? slideIndex = 1 : slideIndex++;\r\n        \r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n        setIndex();\r\n        setActiveClass();\r\n\r\n    });\r\n\r\n    sliderPrevBtn.addEventListener('click', () => {\r\n        offset == 0 ? offset = currentSlideWidth * slidesCount : offset -= currentSlideWidth;\r\n        slideIndex == 1 ? slideIndex = slides.length : slideIndex--;\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n        setIndex();\r\n        setActiveClass();\r\n    });\r\n};\r\n\r\nexport default slides;","const tabs = (tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) => {\r\n    const parentTabHeaderItems = document.querySelector(tabsParentSelector),\r\n          tabHeaderItems = document.querySelectorAll(tabsSelector), \r\n          tabsContent = document.querySelectorAll(tabsContentSelector);\r\n\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add(\"hide\");\r\n        });\r\n        tabHeaderItems.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    function showTabContent(index = 0) {\r\n        tabHeaderItems[index].classList.add(activeClass);\r\n        tabsContent[index].classList.remove(\"hide\");\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    // *I use event delegation to the parent element of the headers:\r\n    parentTabHeaderItems.addEventListener(\"click\", (event) => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1)) && !target.classList.contains(activeClass)) {\r\n            for (let i = 0; i < tabHeaderItems.length; i++) {\r\n                if (tabHeaderItems[i] == target) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\nexport default tabs;","const timer = (id, deadline) => {\r\n\r\n    function getTimeRemaining(endTime) { // *Function for calculating time from milliseconds\r\n        let days, hours, minutes, seconds;\r\n\r\n        // *Calculating the total time, using the difference\r\n        const totalTime = Date.parse(endTime) - Date.parse(new Date());\r\n\r\n        // *If the total time is over, then we reset our timer\r\n        if (totalTime <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n        } else {\r\n            days = Math.floor(totalTime / (1000 * 60 * 60 * 24));\r\n            hours = Math.floor(totalTime / (1000 * 60 * 60) % 24);\r\n            minutes = Math.floor(totalTime / (1000 * 60) % 60);\r\n            seconds = Math.floor((totalTime / 1000) % 60);\r\n        }\r\n\r\n        return { // * Return the converted time\r\n            total: totalTime,\r\n            days: days,\r\n            hours: hours,\r\n            minutes: minutes,\r\n            seconds: seconds\r\n        };\r\n    }\r\n\r\n    // *A function to set zeros if we have a time less than zero. Like on a regular watch\r\n    function setZero(num) {\r\n        if (num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n\r\n    // *Timer setting function\r\n    function setClock(selector, endTime) {\r\n        const returnRemainingTime = getTimeRemaining(endTime); // *calling a function to get an object\r\n\r\n        // *Getting timer elements from a page\r\n        const timerParentElement = document.querySelector(selector),\r\n              daysElement = timerParentElement.querySelector('#days'),\r\n              hoursElement = timerParentElement.querySelector('#hours'),\r\n              minutesElement = timerParentElement.querySelector('#minutes'),\r\n              secondsElement = timerParentElement.querySelector('#seconds');\r\n\r\n        const timeInterval = setInterval(updateClock, 1000); // *We update our timer every second\r\n\r\n        // *We add the received data from the received object, according to the elements. \r\n        // *Immediately call the setZero() function\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endTime);\r\n\r\n            daysElement.innerHTML = setZero(t.days);\r\n            hoursElement.innerHTML = setZero(t.hours);\r\n            minutesElement.innerHTML = setZero(t.minutes);\r\n            secondsElement.innerHTML = setZero(t.seconds);\r\n\r\n            // *If the total time is over, then we reset our timer\r\n            if (returnRemainingTime.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setClock(id, deadline);\r\n};\r\n\r\n\r\nexport default timer;\r\n","const postData = async (url, data) => {\r\n    let res = await fetch(url, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await res.json();\r\n};\r\n\r\nasync function getResource(url) {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n}\r\n\r\nexport {postData, getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\nimport tabs  from './modules/tabs';\r\nimport modal, { showModalWindow } from './modules/modal';\r\nimport timer from './modules/timer';\r\nimport cards from './modules/cards';\r\nimport slides from './modules/slider';\r\nimport calc from './modules/calc';\r\nimport forms from './modules/forms';\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {    \r\n    const timerModalId = setTimeout(() => showModalWindow('.modal', timerModalId), 50000);\r\n\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    modal('[data-modal]', '.modal', timerModalId);\r\n    timer('.timer', '2023-02-11');\r\n    cards();\r\n    \r\n    slides({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        nextArrow: '.offer__slider',\r\n        prevArrow: '.offer__slider-prev',\r\n        totalCounter: '#total',\r\n        currentCounter: '#current',\r\n        wrapper: '.offer__slider-wrapper',\r\n        field: '.slider__inner',\r\n    });\r\n\r\n    calc();\r\n    forms('form', timerModalId);\r\n});"],"names":[],"sourceRoot":""}